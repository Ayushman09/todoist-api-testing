{
	"info": {
		"_postman_id": "e19a5149-eeaa-483c-af60-3363c71f978a",
		"name": "TodoistApiTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "basicTodoistFunctitonalities",
			"item": [
				{
					"name": "test_Oauth",
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].name).to.eql(\"Inbox\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserProjectsError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/project",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "addingNewTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Successful POST request\", function () {",
									"//     pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"// });",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.project_id).to.eql(2266692961);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2995104339,\n    \"content\": \"Buy Milk\",\n    \"description\": \"\",\n    \"comment_count\": 0,\n    \"completed\": false,\n    \"order\": 1,\n    \"priority\": 1,\n    \"project_id\": 2203306141,\n    \"section_id\": 0,\n    \"parent_id\": 0,\n    \"url\": \"https://todoist.com/showTask?id=2995104339\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/tasks",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "addingNewTaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2995104339,\n    \"content\": \"Buy Milk\",\n    \"description\": \"\",\n    \"comment_count\": 0,\n    \"completed\": false,\n    \"order\": 1,\n    \"priority\": 1,\n    \"project_id\": 2203306141,\n    \"section_id\": 0,\n    \"parent_id\": 0,\n    \"url\": \"https://todoist.com/showTask?id=2995104339\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/task",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatingTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"due_string\": \"tomorrow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/4873134296",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"4873134296"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatingTaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Item not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"due_string\": \"tomorrow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/487313429",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"487313429"
							]
						}
					},
					"response": []
				},
				{
					"name": "completingTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/2995104339/close",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"2995104339",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "completingTaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/2995104339/clos",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"2995104339",
								"clos"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletingAProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/2203306141",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2203306141"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletingAProjectError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/220330614",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"220330614"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "projectsManipulation",
			"item": [
				{
					"name": "getAllProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].name).to.eql(\"Inbox\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllProjectsError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/project",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Successful POST request\", function () {",
									"//     pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"// });",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.project_id).to.eql(2266790266);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)"
							},
							{
								"key": "Authorization",
								"value": "Bearer $access_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Shopping List\"}"
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "createProjectExists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Sync item already processed. Ignored\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)"
							},
							{
								"key": "Authorization",
								"value": "Bearer $access_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Shopping List\"}"
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewProjectError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)"
							},
							{
								"key": "Authorization",
								"value": "Bearer $access_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Shopping List\"}"
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/project",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Inbox\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2266692961"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAProjectError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Not Found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/226669296",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"226669296"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Things To Buy\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/projects/2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2266692961"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAProjectNoBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"At least one of name, color or favorite fields should be set\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/projects/2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2266692961"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAProjectError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Project not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Things To Buy\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/projects/226669296",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"226669296"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2266692961"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAProjectError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Project not found\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/226669296",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"226669296"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollaborators",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/projects/2266692961/collaborators",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"projects",
								"2266692961",
								"collaborators"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "sectionsManipulation",
			"item": [
				{
					"name": "getAllSection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections?project_id=2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections"
							],
							"query": [
								{
									"key": "project_id",
									"value": "2266692961"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllSectionError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections?project_id=22033",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections"
							],
							"query": [
								{
									"key": "project_id",
									"value": "22033"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createSection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Groceries\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":2266692961, \"name\":\"Groceries\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/sections?project_id=2266692961",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections"
							],
							"query": [
								{
									"key": "project_id",
									"value": "2266692961"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createSectionError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Project not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":2203306141, \"name\":\"Groceries\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/sections?project_id=2203306141",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections"
							],
							"query": [
								{
									"key": "project_id",
									"value": "2203306141"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getASection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Groceries\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections/50316298",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"50316298"
							]
						}
					},
					"response": []
				},
				{
					"name": "getASectionError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Not Found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections/503162",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"503162"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Supermarket\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/sections/50316298",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"50316298"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSectionWrongParam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Empty name\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"Order\":5}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/sections/50316298",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"50316298"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections/50316298",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"50316298"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSectionError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Section not found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/sections/5031629",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"sections",
								"5031629"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tasksManipulation",
			"item": [
				{
					"name": "getActiveTasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(4872902667);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "getActiveTasksError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"404 page not found\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/task",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 100ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.eql(\"Buy Milk\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/tasks",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewTaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response time is less than 100ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Empty content\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"conten\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/tasks",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAnActiveTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(4872902667);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks/4872902667",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"4872902667"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAnActiveTaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Not Found\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks/487290266",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"487290266"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateATask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Testing update\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/tasks/487290266",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"487290266"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateATaskError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Testing update\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/task/4872902",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"task",
								"4872902"
							]
						}
					},
					"response": []
				},
				{
					"name": "closeATask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks/487290266/close",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"487290266",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "reopenTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks/487290266/reopen",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"487290266",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/tasks/487290266/",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"tasks",
								"487290266",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "commentsManipulation",
			"item": [
				{
					"name": "getAllComments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(2841890844);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments?task_id=4872902667",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "task_id",
									"value": "4872902667"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllCommentsError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(undefined);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments?task_id=487290266",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "task_id",
									"value": "487290266"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.task_id).to.eql(4872902667);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"task_id\": 4872902667,\n    \"content\": \"Need one bottle of milk\",\n    \"attachment\": {\n        \"resource_type\": \"file\",\n        \"file_url\": \"https://s3.amazonaws.com/domorebetter/Todoist+Setup+Guide.pdf\",\n        \"file_type\": \"application/pdf\",\n        \"file_name\": \"File.pdf\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/comments",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewCommentError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Either task_id or project_id should be set\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Need one bottle of milk\",\n    \"attachment\": {\n        \"resource_type\": \"file\",\n        \"file_url\": \"https://s3.amazonaws.com/domorebetter/Todoist+Setup+Guide.pdf\",\n        \"file_type\": \"application/pdf\",\n        \"file_name\": \"File.pdf\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/comments",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.task_id).to.eql(4872902667);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments/2843912242",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"2843912242"
							]
						}
					},
					"response": []
				},
				{
					"name": "getACommentError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Not Found\\n\");",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments/284391224",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"284391224"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"content\": \"Need two bottles of milk\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/comments/2843912242",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"2843912242"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCommentError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Empty content\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"conten\": \"Need two bottles of milk\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{todoist}}/comments/2843912242",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"2843912242"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments/2843912242",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"2843912242"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCommentError",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{todoist}}/comments/284391",
							"host": [
								"{{todoist}}"
							],
							"path": [
								"comments",
								"284391"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenName",
				"value": "access-token",
				"type": "string"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "state",
				"value": "secretstring",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "data:read_write,data:delete",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://oauth.pstmn.io/v1/callback",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "0c3d5dbca4214cc0bec4373cfbbd4f0f",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "6c96cd13f7784bd8a1137e901115d1c6",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://todoist.com/oauth/authorize",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://todoist.com/oauth/access_token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.set(\"access_token\", \"e4c291d63415c9d0f274cf9069d2b571f61a7137\");",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}